apply plugin: 'com.android.library'

def DEVELOPMENT_URL = System.properties['DEVELOPMENT_URL'] ?: '"http://10.0.2.2:3000/"';

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        consumerProguardFiles 'proguard.pro'

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        androidTest {
            java.srcDir sharedTestDir
        }
        test {
            java.srcDir sharedTestDir
        }
    }
}

dependencies {
    compileOnly('com.google.android.gms:play-services-wallet:16.0.1') {
        exclude module: 'support-v4'
    }
    compileOnly 'com.android.support:support-v4:28.0.0'
    compileOnly 'com.android.support:support-annotations:28.0.0'

    /* Google Payment has been moved to braintree-android-google-payment.
     * Version 1.0.0 is a direct move of files to the new module, and to maintain backward compability we offer google payment 1.0.0 here.
     * This should not be incremented in the future. Merchants should add `com.braintreepayments.api:google-payment` to
     * their dependencies and specify the version they wish to use.
     */
    api 'com.braintreepayments.api:google-payment:1.0.0'

    /* Visa Checkout being included in braintree-android is deprecated and will continue to
     * stay at version 1.0.0. Merchants should include Visa Checkout as a seperate dependency
     * in addition to braintree-android.
     */
    api 'com.braintreepayments.api:visa-checkout:1.0.0'
    api project(':Core')
    compileOnly project(':BraintreeDataCollector')
    api project(':PayPalOneTouch')

    androidTestImplementation 'com.google.android.gms:play-services-wallet:16.0.1'
    androidTestImplementation project(':BraintreeDataCollector')
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation project(':TestUtils')

    testImplementation 'com.google.android.gms:play-services-wallet:16.0.1'
    testImplementation project(':BraintreeDataCollector')
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'org.skyscreamer:jsonassert:1.4.0'
    testImplementation project(':TestUtils')
}

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'DEVELOPMENT_URL', DEVELOPMENT_URL
}

task runAllTests {
    /*
     * Empty task to run via command line Rakefile or ci.sh to indicate that tests that depend on
     * setting up external services (like the test invalid https server) are set up correctly.
     * Otherwise, these tests will be skipped
     */
}

gradle.taskGraph.whenReady { taskGraph ->
    def RUN_ALL_TESTS = taskGraph.hasTask(':Braintree:runAllTests')
    android.buildTypes.debug.buildConfigField('boolean', 'RUN_ALL_TESTS', '' + RUN_ALL_TESTS)
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocsJar
    archives sourcesJar
}

apply plugin: 'io.codearte.nexus-staging'
nexusStaging {
    packageGroup = "com.braintreecv1payments"
}

group = 'com.braintreecv1payments.api'
uploadArchives {
    repositories {
        mavenDeployer {
            pom.setArtifactId 'braintreecv1'

            pom.project {
                name 'braintreecv1'
                groupId = 'com.braintreecv1payments.api'
                version = "${android.defaultConfig.versionName}"
                description 'This is Braintree\'s Android SDK. Integrate this library to accept payments in your Android app.'
            }

            pom.whenConfigured { MavenPom pom ->
                def ignoredDependencies = [
                        'com.android.support:support-v4',
                        'com.android.support:appcompat-v7',
                        'com.android.support:design'
                ]
                pom.dependencies.each { dependency ->
                    def dependencyNotation = dependency.groupId + ':' + dependency.artifactId
                    dependency.optional = ignoredDependencies.contains(dependencyNotation)

                    logger.warn(dependency.toString() + ' optional? ' + dependency.optional)
                }
            }
        }
    }
}
